swagger: "2.0"
info:
  description: "This is a Loan App Aprroval server"
  version: "1.0.0"
  title: "Loan App Approval"
  contact:
    email: "youremail@gmail.com"
host: "loanappapproval.services.io"
basePath: "/v1"
tags:
- name: "loan"
  description: "Everything about loan"
- name: "customer"
  description: "Everything about customer"
schemes:
- "http"
paths:
  /loan:
    get:
      tags:
      - "loan"
      summary: "List different types of loans"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "listLoans"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Loan"
  /loan/{loanId}:
    get:
      tags:
      - "loan"
      summary: "List loan details by Id"
      operationId: "listLoanDetailsyId"
      produces:
      - "application/json"
      parameters:
      - name: "loanId"
        in: "path"
        description: "ID of loan for which details to be fetched"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LoanDetails"
  /customer:
    post:
      tags:
      - "customer"
      summary: "Save customer details & loan requirements"
      operationId: "saveCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Customer that needs to be saved"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/LoanDetails"
  /customer/{customerId}/documents:
    post:
      tags:
      - "customer"
      summary: "uploads zip file"
      description: ""
      operationId: "uploadDocuments"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer"
        required: true
        type: "integer"
        format: "int64"
      - name: "file"
        in: "formData"
        description: "file to upload"
        required: false
        type: "file"
      responses:
        "200":
          description: "successful operation"
    get:
      tags:
      - "customer"
      summary: Returns the documents in the zip format
      produces:
        - application/zip
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: "successful operation"
  /customer/{customerId}/sendEmail:
    post:
      tags:
      - "customer"
      summary: "uploads zip file"
      description: ""
      operationId: "sendEmail"
      produces:
      - "application/json"
      consumes:
      - "applicatio/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Customer that needs to be saved"
        required: true
        schema:
          $ref: "#/definitions/EmailDetails"
      responses:
        "200":
          description: "successful operation"
            
            
        
definitions:
  Loan:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Home Loan"
        enum:
        - "Home Loan"
        - "Personal Loan"
        - "Car Loan"
  LoanDetails:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      interestDetails:
        $ref: "#/definitions/InterestDetails"
      eligibilityCriteria:
        $ref: "#/definitions/EligibilityCriteria"
      documents:
        type: "array"
        xml:
          name: "documents"
          wrapped: true
        items:
          type: "string"
            
  InterestDetails:
    type: "object"
    properties:
      rate:
        type: "string"
  EligibilityCriteria:
    type: "object"
    properties:
      minAge:
        type: "string"
      maxAge:
        type: "string"
      minSalary:
        type: "string"
  Customer:
    type: "object"
    properties:
      id:
        type: "number"
      basicInfo:
        $ref: "#/definitions/BasicInfo"
      loanTenure:
        type: "string"
      communicationDetails:  
        $ref: "#/definitions/CommunicationDetails"
  BasicInfo:
    type: "object"
    properties:
      name:
        type: "string"
      age:
        type: "string"
      salary:
        type: "string"
  CommunicationDetails:
    type: "object"
    properties:
      emailAddress:
        type: "string"
      mobileNo:
        type: "string"
      address:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
      pincode:
        type: "string"
  EmailDetails:
    type: "object"
    properties:
      operationType:
        type: "string"
        enum: 
          - "LoanRequest"
          - "Callback"
      status:
        type: "string"
        enum: 
          - "Approved"
          - "Rejected"
      